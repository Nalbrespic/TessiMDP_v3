<?php

namespace TMD\ProdBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EcommBLRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class EcommBLRepository extends EntityRepository
{

    public function findNbBlByFile( $files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('bl.siteProduction', 'site')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $files)
            ->select('(bl.idfile) as idfile')
            ->addSelect('count(bl.idbl)')
            ->addSelect('site.abregesiteprod')
            ->addSelect('max(bl.dateProduction) as maxDate')
            ->groupBy('tr.idfile')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findBlByOpeByDate( $date, $ope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut','stat')
            ->innerJoin('bl.siteProduction', 'site')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction LIKE :date')
            ->setParameter('date',$date.'%')
            ->andWhere('stat.idStatut != (:st1)')
            ->setParameter('st1', 9)
            ->andWhere('stat.idStatut != (:st2)')
            ->setParameter('st2', 10)
            ->andWhere('file.idappli IN (:ope)')
            ->setParameter('ope',$ope)
            ->getQuery()
            ->getResult()
            ;
    }

    public function findBlByOpeByDateDepot( $date, $ope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('bl.siteProduction', 'site')
            ->innerJoin('tr.idfile', 'file')
            ->where('tr.dateDepot LIKE :date')
            ->setParameter('date',$date.'%')
            ->andWhere('file.idappli IN (:ope)')
            ->setParameter('ope',$ope)
            ->getQuery()
            ->getResult()
            ;
    }


    public function findNbBlByFileProd( $files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('bl.idfile IN (:id)')
            ->setParameter('id', $files)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->andWhere('tr.idStatut != :st')
            ->setParameter('st', 9)
            ->select('bl.idfile')
            ->addSelect('count(bl.idbl)')
            ->addSelect('min(bl.dateProduction) as minDate')
            ->groupBy('bl.idfile')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllBlByDateProduction($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllClientByDateProduction($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->innerJoin('bl.numligne', 'tr')
            ->innerJoin('tr.idclient', 'cl')
            ->select('cl.nomclient')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllAppliByDateProduction($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->innerJoin('bl.numligne', 'tr')
            ->innerJoin('tr.idfile', 'fi')
            ->innerJoin('fi.idappli', 'appl')
            ->select('appl.appliname')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }


    public function findNbBlProduitsByDate($idappli)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'fi')
            ->innerJoin('fi.idappli', 'appl')
            ->where('appl.idappli = :id')
            ->setParameter('id',$idappli)
            ->select('SUBSTRING(bl.dateProduction, 1, 10) as start')
            ->addSelect('count(bl.idbl) as title')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10) as infoDate')
            ->addSelect('appl.idappli as infoIdAppli')
            ->groupBy('start')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findNbBlDepotByDate($idappli)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'fi')
            ->innerJoin('fi.idappli', 'appl')
            ->where('appl.idappli = :id')
            ->setParameter('id',$idappli)
            ->select('SUBSTRING(tr.dateDepot, 1, 10) as start')
            ->addSelect('count(bl.idbl) as title')
            ->addSelect('SUBSTRING(tr.dateDepot, 1, 10) as infoDate')
            ->addSelect('appl.idappli as infoIdAppli')
            ->groupBy('start')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllBlByBLS($idBLs)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->where('ligne.numbl IN (:id)')
            ->setParameter('id', $idBLs)
            ->andWhere('cmd.flagart = 0')
            ->addSelect('app.appliname')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('tr.destTel')
            ->addSelect('tr.destMail')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.type')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('sum(cmd.poids) as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('count(cmd.numbl) as nbCmd')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByFile($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('tr.idStatut', 'stat')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('app.appliname')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('tr.destTel')
            ->addSelect('tr.destMail')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.type')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('count(cmd.numbl) as nbCmd')
            ->addSelect('stat.idStatut')
            ->addSelect('tr.json')
            ->addSelect('bl.modexp')
            ->addSelect('bl.dateProduction')
            ->addSelect('bl.nColis')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByFileArticle($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('app.appliname')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('tr.destTel')
            ->addSelect('tr.destMail')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.type')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('IDENTITY(tr.idStatut) as trStatut')
            ->addSelect('tr.json')
            ->addSelect('bl.modexp')
            ->addSelect('bl.dateProduction')
            ->addSelect('bl.nColis')
            ->addSelect('cmd.codearticle')
            ->addSelect('cmd.libelle')
            ->addSelect('cmd.quantite')
            ->addSelect('IDENTITY(cmd.idStatut) as cmdStatut')
            ->orderBy('tr.expRef', 'DESC')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByDateProdByAppli($idAppli, $dateDepot, $mode = false)
    {
        $result  = $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp');

        if ($mode) {
            $result->andWhere('statut.idStatut != 9')
                ->andWhere('statut.idStatut != 10');
        }
        $result->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.destTel')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('statut.statut as trStatut ')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
        ;


        return $result->getQuery()->getArrayResult();
    }
    public function findTypeTransport($idAppli, $DateProd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->select('bl.modexp as typeTransport')
            ->distinct()
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function findAllBlByDateDepotByAppli($idAppli, $DateProd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->innerJoin('tr.idStatut', 'st')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.destTel')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('st.statut as trStatut')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function nbPresseByDateDepotByAppli($idAppli, $DateProd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('tr.typeTransport = (:trans)')
            ->setParameter('trans', 'PRESS')
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->Select('count(bl.idbl)')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findNbTransportByFile($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('(bl.idfile) as idfile')
            ->addSelect('tr.typeTransport as modexp')
            ->addSelect('count(bl.modexp)')
            ->groupBy('bl.modexp, bl.idfile')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findNbTransportByBls($bls)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->where('ligne.numbl IN (:id)')
            ->setParameter('id', $bls)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('tr.typeTransport as modexp')
            ->addSelect('count(bl.modexp)')
            ->groupBy('bl.modexp')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findDistinctTransportByBls($bls)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('ligne.numbl IN (:id)')
            ->setParameter('id', $bls)
            ->select('tr.typeTransport')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }


    public function findDistinctTransportByFile($idFiles)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idFiles)
            ->select('tr.typeTransport')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }


    public function findOperationsCourantes($result)
    {
        $dateJ7 = date("Y-m-d", strtotime('-14 day'));
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->where('bl.dateProduction > (:id)')
            ->setParameter('id', $dateJ7)
            ->select('app.appliname')
            ->addSelect('MAX(bl.dateProduction) as date')
            ->addSelect('app.appliImage')
            ->addSelect('file.idclient')
            ->addSelect('app.idappli')
            ->groupBy('file.idappli')
            ->orderBy('date', 'DESC')
            ->setMaxResults( $result )
            ->getQuery()
            ->getResult()
            ;
    }


    public function findOperationsVeille($date, $idBL)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('bl.idbl > :idB')
            ->setParameter('idB', $idBL)
            ->andWhere('bl.dateProduction LIKE :id')
            ->setParameter('id', '%'.$date.'%')
            ->select('app.appliname')
            ->addSelect('app.idappli')
            ->addSelect('cli.nomclient')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10)')
            ->addSelect('ligne.idclient')
            ->addSelect('app.idappli')
            ->addSelect('sum(cmd.quantite) as qtS')
            ->addSelect('COUNT(distinct(ligne.numbl)) as blC')
            ->addSelect('COUNT(distinct(tr.idfile)) as fileC')
            ->groupBy('file.idappli')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findMaxIdBl()
    {
        return $this
            ->createQueryBuilder('bl')
            ->select('MAX(bl.idbl)')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findOperationsDuJour($idBL)
    {
        $date = date("Y-m-d");
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('bl.idbl > :idB')
            ->setParameter('idB', $idBL)
            ->andWhere('bl.dateProduction LIKE :id')
            ->setParameter('id', '%'.$date.'%')
            ->select('app.appliname')
            ->addSelect('app.idappli')
            ->addSelect('cli.nomclient')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10)')
            ->addSelect('ligne.idclient')
            ->addSelect('app.idappli')
            ->addSelect('sum(cmd.quantite) as qtS')
            ->addSelect('COUNT(distinct(ligne.numbl)) as blC')
            ->addSelect('COUNT(distinct(tr.idfile)) as fileC')
            ->groupBy('file.idappli')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllBlByCmdandCodeArticle($code,$idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('cmd.codearticle = :cmd')
            ->setParameter('cmd', $code)
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('tr.numCmdeClient')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.destTel')
            ->addSelect('tr.expRef')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.destPays')
            ->addSelect('tr.montant')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('cmd.numTrack')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByCmdModifb($cmd, $idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('ligne.numbl LIKE :numbl')
            ->setParameter('numbl', '%'.$cmd.'%')
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('file.filename')
            ->addSelect('bl.nColis')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.dateDepot')
            ->addSelect('bl.dateProduction')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByCmdModiff($cmd, $idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('UPPER(file.filename) LIKE UPPER(:cmd5)')
            ->setParameter('cmd5', '%'.$cmd.'%' )
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('file.filename')
            ->addSelect('bl.nColis')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.dateDepot')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('file.filename')
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function findAllBlByCmdModiffaUpdateFab($cmd, $idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('UPPER(file.filename) LIKE UPPER(:cmd5)')
            ->setParameter('cmd5', '%'.$cmd.'%' )
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('file.filename')
            ->addSelect('bl.nColis')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.dateDepot')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('file.filename')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlByCmdModiffaUpdateDepot($cmd,$idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('UPPER(file.filename) LIKE UPPER(:cmd5)')
            ->setParameter('cmd5', '%'.$cmd.'%' )
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->andwhere('tr.dateDepot = :dat')
            ->setParameter('dat', '0000-00-00')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('file.filename')
            ->addSelect('bl.nColis')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.dateDepot')
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('file.filename')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function donneCmdCoriolisWithNumRef($numRef, $idApp)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApp)
            ->andWhere('tr.idclient = (:idClient)')
            ->setParameter('idClient', 679)
            ->andwhere('cmd.numRef = (:nRef)')
            ->setParameter('nRef', $numRef)
            ->select('cmd.numcmde')
            ->getQuery()
            ->getResult()
            ;
    }

    public function donneAllArticleByCmd($numCmd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->where('cmd.numcmde IN (:numCmd)')
            ->setParameter('numCmd', $numCmd)
            ->andWhere('cmd.idclient = (:idClient)')
            ->setParameter('idClient', 679)
            ->select('cmd.numero')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.refclient')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destCp')
            ->addSelect('tr.destVille')
            ->addSelect('tr.destRue')
            ->addSelect('cmd.numcmde')
            ->addSelect('cmd.numRef')
            ->addSelect('cmd.flagProd')
            ->addSelect('cmd.numTrack')
            ->addSelect('cmd.type')
            ->addSelect('tr.destinataire')
            ->addSelect('cmd.record')
            ->orderBy('cmd.numero', 'DESC')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function donneCmdCoriolis($idApplication)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApplication)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('cmd.numRef')
            ->addSelect('count(distinct(cmd.numbl)) as nbBl')
            ->addSelect('cmd.flagProd')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function donneBlCoriolis($idApplication)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApplication)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('cmd.numRef')
//            ->addSelect('count(distinct(cmd.numbl)) as nbBl')
            ->addSelect('cmd.flagProd')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisArtCokeFlagZero($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->addSelect('cmd.flagart')
            ->addSelect('cmd.libelle')
            ->groupBy('ligne.numbl, cmd.libelle')
            ->orderBy('cmd.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisCoriolis1($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 554)
            ->andWhere('cmd.type LIKE :typ')
            ->setParameter('typ', '%E%')
            ->select('count(cmd.numbl) as cn')
            ->groupBy('ligne.numbl')
            ->having('cn > 0 and cn < 5')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisCoriolis2($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 554)
            ->andWhere('cmd.type LIKE :typ')
            ->setParameter('typ', '%E%')
            ->select('count(cmd.numbl) as cn')
            ->groupBy('ligne.numbl')
            ->having('cn > 4 and cn < 11')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisCoriolis3($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 554)
            ->andWhere('cmd.type LIKE :typ')
            ->setParameter('typ', '%E%')
            ->select('count(cmd.numbl) as cn')
            ->groupBy('ligne.numbl')
            ->having('cn > 10 and cn < 31')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisCoriolis4($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 554)
            ->andWhere('cmd.type LIKE :typ')
            ->setParameter('typ', '%E%')
            ->select('count(cmd.numbl) as cn')
            ->groupBy('ligne.numbl')
            ->having('cn > 30')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisArtCokePSG($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('UPPER(cmd.codearticle) LIKE  :ps')
            ->setParameter('ps', '%PSG%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function syntheseMoisArtCokeCollector($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('UPPER(cmd.codearticle) LIKE  :cd')
            ->setParameter('cd', '0071')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlForBordereau()
    {
        $date = date("Y-m-d");
        $tabCN23 = array('COM', 'CDS', 'ECO', 'COLI' );
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('tr.typeTransport IN (:trans)')
            ->setParameter('trans', $tabCN23)
            ->andWhere('tr.dateDepot = :date')
            ->setParameter('date', $date)
            ->andWhere('tr.expCompte = :cpt')
            ->setParameter('cpt', '923108')
            ->select('tr.expRef')
            ->addSelect('bl.nColis')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function findAllBlForBordereauTrack()
    {
        $date = date("Y-m-d");
        $tabCN23 = array('COM', 'CDS', 'ECO', 'COLI' );
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('tr.typeTransport IN (:trans)')
            ->setParameter('trans', $tabCN23)
            ->andWhere('tr.dateDepot = :date')
            ->setParameter('date', $date)
            ->andWhere('tr.expCompte = :cpt')
            ->setParameter('cpt', '923108')
            ->select('bl.nColis')
            ->getQuery()
            ->getResult()
            ;
    }


    public function findAllBlsByFile($idclient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idclient IN (:idC)')
            ->setParameter('idC', $idclient)
            ->andWhere('file.idappli IN (:idO)')
            ->setParameter('idO', $idope)
            ->getQuery()
            ->getResult()
            ;
    }


    public function findnbKubTotal($idStatut)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT COUNT(bl.bl) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' and hs.id > 1000000 and hs.idstatut = ('.$idStatut.') 
                                                              GROUP BY cmd.numbl');
        $results = $query->getArrayResult();
        return $results;
    }


    public function findnbKubTotalJ($idStatut, $jour)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT COUNT(bl.bl) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' and hs.id > 1000000 and hs.idstatut = ('.$idStatut.') and hs.datestatut <= '."'".$jour." 23:00:00'".'
                                                              GROUP BY cmd.numbl');
        $results = $query->getArrayResult();
        return $results;
    }


    public function findnbKubbyHour($idStatut, $dateJour, $dateInterro)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT COUNT(bl.bl) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' 
                                                                and hs.id > 1000000 
                                                                and hs.idstatut = '.$idStatut.'
                                                                and hs.datestatut > '."'".$dateJour."'".'
                                                                and hs.datestatut < '."'".$dateInterro."'".'
                                                              GROUP BY cmd.numbl');
        $results = $query->getArrayResult();
        return $results;
    }


    public function findnbElecteurTotal($idStatut)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT SUM(cmd.quantite) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' and hs.id > 1000000 and hs.idstatut = ('.$idStatut.')
                                                              ');
        $results = $query->getArrayResult();
        return $results;
    }


    public function findnbElecteurTotalJ($idStatut, $jour)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT SUM(cmd.quantite) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' 
                                                              and hs.id > 1000000 
                                                              and hs.idstatut = ('.$idStatut.')
                                                              and hs.datestatut <= '."'".$jour." 23:00:00'".'
                                                              ');
        $results = $query->getArrayResult();
        return $results;
    }


    public function findnbElecteurbyHour($idStatut, $dateJour, $dateInterro)
    {
        $idFichier = 5580;
        $query = $this->_em->createQuery('SELECT SUM(cmd.quantite) FROM TMDProdBundle:EcommBl bl 
                                                              INNER JOIN TMDProdBundle:EcommCmdep cmd
                                                              WITH bl.bl = cmd.numbl
                                                              INNER JOIN TMDProdBundle:EcommHistoStatut hs
                                                              WITH hs.numbl = bl.bl
                                                              WHERE bl.idfile = '.$idFichier.' 
                                                                and hs.id > 1000000 
                                                                and hs.idstatut = '.$idStatut.'
                                                                and hs.datestatut > '."'".$dateJour."'".'
                                                                and hs.datestatut < '."'".$dateInterro."'".'
                                                              ');
        $results = $query->getArrayResult();
        return $results;
    }
    public function syntheseMoisBl($date, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', $idope)
            ->select('count(bl.bl) as cn')
            ->getQuery()
            ->getResult()
            ;
    }
    public function findBlbycodeTransporteur($idAppli, $DateProd, $codetransport)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->select('bl.idbl')
            ->addSelect('ligne.poids')
            ->getQuery()
            ->getArrayResult()
            ;
    }
    public function findcountBlByPoids($idAppli, $DateProd, $codetransport, $poids){

        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->andWhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids <= (:poids)')
            ->setParameter('poids', $poids)
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
    public function findcountBlByTranche($idAppli, $DateProd, $codetransport, $poids1, $poids2){

        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids > (:poids1)')
            ->setParameter('poids1', $poids1)
            ->andwhere('ligne.poids <= (:poids2)')
            ->setParameter('poids2', $poids2)
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }
    public function findcountBlByPoidsVPC($idAppli, $Datedepot, $codetransport, $poids){
        $type= 'VPC';
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $Datedepot.'%')
            ->andWhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids <= (:poids)')
            ->setParameter('poids', $poids)
            ->andWhere('tr.json LIKE :type')
            ->setParameter('type', '%'.$type.'%')
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function findcountBlByPoidsPRIME($idAppli, $dateDepot, $codetransport, $poids){
        $type = 'PRIME';
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->andWhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids <= (:poids)')
            ->setParameter('poids', $poids)
            ->andWhere('tr.json LIKE :type')
            ->setParameter('type', '%'.$type.'%')
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function findcountBlByTrancheVPC($idAppli, $dateDepot, $codetransport, $poids1, $poids2){
        $type = 'VPC';
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids > (:poids1)')
            ->setParameter('poids1', $poids1)
            ->andwhere('ligne.poids <= (:poids2)')
            ->setParameter('poids2', $poids2)
            ->andWhere('tr.json LIKE :type')
            ->setParameter('type', '%'.$type.'%')
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function findcountBlByTranchePRIME($idAppli, $dateDepot, $codetransport, $poids1, $poids2){
        $type ='PRIME';
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andwhere('ligne.poids > (:poids1)')
            ->setParameter('poids1', $poids1)
            ->andwhere('ligne.poids <= (:poids2)')
            ->setParameter('poids2', $poids2)
            ->andWhere('tr.json LIKE :type')
            ->setParameter('type', '%'.$type.'%')
            ->select ('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function findCountBlByTransport($idAppli, $dateDepot, $codetransport){

        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->select('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    public function findCountBlByTransportByType($idAppli, $dateDepot, $codetransport, $type){

        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $dateDepot.'%')
            ->andwhere('bl.modexp IN (:code)')
            ->setParameter("code", $codetransport)
            ->andWhere('tr.json LIKE :type')
            ->setParameter('type', '%'.$type.'%')
            ->select('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }


    public function findAllBlByDateProdByAppliByTransport($idAppli, $DateProd, $typetransport)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->andWhere('statut.idStatut != 9')
            ->andWhere('statut.idStatut != 10')
            ->andWhere('tr.typeTransport IN (:typetransport)')
            ->setParameter('typetransport', $typetransport)
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destPays')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->getQuery()
            ->getArrayResult()
            ;



    }

    public function findColisByDate($idOpe, $thisdate, $type, $colis){

        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idOpe)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $thisdate.'%')
            ->andWhere('cmd.codearticle LIKE :code')
            ->setParameter('code', $colis)
            ->andWhere('tr.json = :type')
            ->setParameter('type', '%'.$type.'%')
            ->select('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult();
    }

    public function findColisByDateNoType($idOpe, $thisdate, $colis){
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idStatut', 'statut')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idOpe)
            ->andWhere('statut.idStatut != (:st)')
            ->andWhere('statut.idStatut != (:st2)')
            ->setParameter('st', 9)
            ->setParameter('st2', 10)
            ->andWhere('tr.dateDepot LIKE :dat')
            ->setParameter('dat', $thisdate.'%')
            ->andWhere('cmd.codearticle LIKE :code')
            ->setParameter('code', $colis)
            ->select('count(bl.bl)')
            ->getQuery()
            ->getSingleScalarResult();

    }

}
