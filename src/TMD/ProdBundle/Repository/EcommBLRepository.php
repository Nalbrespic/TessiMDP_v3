<?php

namespace TMD\ProdBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * EcommBLRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class EcommBLRepository extends EntityRepository
{

    public function findNbBlByFile( $files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('bl.siteProduction', 'site')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $files)
            ->select('(bl.idfile) as idfile')
            ->addSelect('count(bl.idbl)')
            ->addSelect('site.abregesiteprod')
            ->addSelect('max(bl.dateProduction as maxDate')
            ->groupBy('tr.idfile')
            ->getQuery()
            ->getResult()

            ;
    }


    public function findBlByOpeByDate( $date, $ope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('bl.siteProduction', 'site')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction LIKE :date')
            ->setParameter('date',$date.'%')
            ->andWhere('file.idappli IN (:ope)')
            ->setParameter('ope',$ope)
//            ->addSelect('bl.bl')
//            ->addSelect('count(bl.numligne)')
//            ->addSelect('site.abregesiteprod')
//            ->groupBy('tr.idfile')
            ->getQuery()
            ->getResult()

            ;
    }


//    public function findDateMinProdByFile( $files)
//    {
//        return $this
//            ->createQueryBuilder('bl')
//            ->where('bl.idfile IN (:id)')
//            ->setParameter('id', $files)
//            ->andwhere('bl.dateProduction > :dat')
//            ->setParameter('dat', '0000-00-00 00:00:00')
//            ->select('(bl.idfile) as idfile')
//            ->addSelect('min(bl.dateProduction as minDate')
//            ->groupBy('bl.idfile')
//            ->getQuery()
//            ->getResult()
//
//            ;
//    }

    public function findNbBlByFileProd( $files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->where('bl.idfile IN (:id)')
            ->setParameter('id', $files)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('bl.idfile')
            ->addSelect('count(bl.idbl)')
            ->addSelect('min(bl.dateProduction as minDate')
            ->groupBy('bl.idfile')
            ->getQuery()
            ->getResult()

            ;
    }



    public function findAllBlNonProdByFile($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
//            ->innerJoin('file.idappli', 'app')
            ->where('bl.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
//            ->addSelect('app.appliname')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.type')
            ->addSelect('tr.destPays')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }



    public function findAllBlByDateProduction($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAllClientByDateProduction($date)
    {

        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->innerJoin('bl.numligne', 'tr')
            ->innerJoin('tr.idclient', 'cl')
            ->select('cl.nomclient')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAllAppliByDateProduction($date)
    {

        return $this
            ->createQueryBuilder('bl')
            ->where('bl.dateProduction LIKE :id')
            ->setParameter('id',$date.'%')
            ->innerJoin('bl.numligne', 'tr')
            ->innerJoin('tr.idfile', 'fi')
            ->innerJoin('fi.idappli', 'appl')
            ->select('appl.appliname')
            ->distinct()
            ->getQuery()
            ->getResult()
            ;
    }

    public function findNbBlProduitsByDate($idappli)
    {

        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'fi')
            ->innerJoin('fi.idappli', 'appl')
            ->where('appl.idappli = :id')
            ->setParameter('id',$idappli)
            ->select('SUBSTRING(bl.dateProduction, 1, 10) as start')
            ->addSelect('count(bl.idbl) as title')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10) as infoDate')
            ->addSelect('appl.idappli as infoIdAppli')
            ->groupBy('start')
            ->getQuery()
            ->getResult()
            ;
    }

    public function findAllBlByFile($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->addSelect('app.appliname')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.dateDepot')
            ->addSelect('tr.type')
            ->addSelect('tr.destPays')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('count(cmd.numbl) as nbCmd')
//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }

//    public function findAllFileBetweenDate($idOpe,$dateDebut,$dateFin)
//    {
//        return $this
//            ->createQueryBuilder('bl')
//            ->innerJoin('bl.bl', 'ligne')
//            ->leftJoin('ligne.ecommCmdeps', 'cmd')
//            ->innerJoin('ligne.numligne', 'tr')
//            ->innerJoin('tr.idfile', 'file')
//            ->innerJoin('file.idappli', 'app')
//            ->where('app.idappli IN (:id)')
//            ->setParameter('id', $idOpe)
//            ->andWhere('bl.dateProduction >= (:start)')
//            ->setParameter('start', $dateDebut)
//            ->andWhere('bl.dateProduction <= (:fin)')
//            ->setParameter('fin', $dateFin)
//            ->addSelect('tr.destinataire')
//            ->addSelect('tr.destCp')
//            ->addSelect('tr.typeTransport')
//            ->addSelect('ligne.numbl')
//            ->addSelect('tr.destRue')
//            ->addSelect('tr.destAd2')
//            ->addSelect('tr.destAd3')
//            ->addSelect('tr.destAd4')
//            ->addSelect('tr.destAd5')
//            ->addSelect('tr.destAd6')
//            ->addSelect('tr.expRef')
//            ->addSelect('tr.refclient')
//            ->addSelect('tr.destVille')
//            ->addSelect('file.dateFile')
//            ->addSelect('tr.dateCmde')
//            ->addSelect('tr.instrLivrais1')
//            ->addSelect('tr.instrLivrais2')
//            ->addSelect('tr.destPays')
//            ->addSelect('file.nbpages')
//            ->addSelect('file.filename')
//            ->addSelect('ligne.poids as poidsReel')
//            ->addSelect('sum(cmd.quantite) as quantite')
//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
//            ->orderBy('tr.dateInsert', 'DESC')
//            ->groupBy('ligne.numbl')
//            ->getQuery()
//            ->getArrayResult()
//            ;
//    }

    public function findAllBlByDateProdByAppli($idAppli, $DateProd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'appli')
            ->where('appli.idappli IN (:idapp)')
            ->setParameter('idapp', $idAppli)
            ->andWhere('bl.dateProduction LIKE :dat')
            ->setParameter('dat', $DateProd.'%')
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.destPays')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function findNbTransportByFile($idfile)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idfile)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('(bl.idfile) as idfile')
            ->addSelect('tr.typeTransport as modexp')
            ->addSelect('count(bl.modexp)')
            ->groupBy('bl.modexp, bl.idfile')
            ->getQuery()
            ->getResult()

            ;

    }


    public function findNbTransportByBls($bls)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->where('ligne.numbl IN (:id)')
            ->setParameter('id', $bls)
            ->andwhere('bl.dateProduction != :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('tr.typeTransport as modexp')
            ->addSelect('count(bl.modexp)')
            ->groupBy('bl.modexp')
            ->getQuery()
            ->getResult()

            ;

    }

    public function findDistinctTransportByBls($bls)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('ligne.numbl IN (:id)')
            ->setParameter('id', $bls)
            ->select('tr.typeTransport')
            ->distinct()
            ->getQuery()
            ->getResult()

            ;

    }

    public function findDistinctTransportByFile($idFiles)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->where('tr.idfile IN (:id)')
            ->setParameter('id', $idFiles)
            ->select('tr.typeTransport')
            ->distinct()
            ->getQuery()
            ->getResult()

            ;

    }

    public function findOperationsCourantes()
    {
        $dateJ7 = date("Y-m-d", strtotime('-14 day'));
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->where('bl.dateProduction > (:id)')
            ->setParameter('id', $dateJ7)
            ->select('app.appliname')
            ->addSelect('MAX(bl.dateProduction) as date')
            ->addSelect('app.appliImage')
            ->addSelect('file.idclient')
            ->addSelect('app.idappli')
            ->groupBy('file.idappli')
            ->orderBy('date', 'DESC')
            ->setMaxResults( 6 )
            ->getQuery()
            ->getResult()

            ;

    }

    public function findOperationsVeille($date, $idBL)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('bl.idbl > :idB')
            ->setParameter('idB', $idBL)
            ->andWhere('bl.dateProduction LIKE :id')
            ->setParameter('id', '%'.$date.'%')
            ->select('app.appliname')
//            ->addSelect('app.appliImage')
            ->addSelect('app.idappli')
            ->addSelect('cli.nomclient')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10)')
            ->addSelect('ligne.idclient')
            ->addSelect('app.idappli')
            ->addSelect('sum(cmd.quantite) as qtS')
            ->addSelect('COUNT(distinct(ligne.numbl)) as blC')
            ->addSelect('COUNT(distinct(tr.idfile)) as fileC')
            ->groupBy('file.idappli')
            ->getQuery()
            ->getArrayResult()

            ;

    }


    public function findMaxIdBl()
    {

        return $this
            ->createQueryBuilder('bl')
            ->select('MAX(bl.idbl)')
            ->getQuery()
            ->getResult()

            ;

    }

    public function findOperationsDuJour($idBL)
    {
        $date = date("Y-m-d");
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cli')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('bl.idbl > :idB')
            ->setParameter('idB', $idBL)
            ->andWhere('bl.dateProduction LIKE :id')
            ->setParameter('id', '%'.$date.'%')
            ->select('app.appliname')
//            ->addSelect('app.appliImage')
            ->addSelect('app.idappli')
            ->addSelect('cli.nomclient')
            ->addSelect('SUBSTRING(bl.dateProduction, 1, 10)')
            ->addSelect('ligne.idclient')
            ->addSelect('app.idappli')
            ->addSelect('sum(cmd.quantite) as qtS')
            ->addSelect('COUNT(distinct(ligne.numbl)) as blC')
            ->addSelect('COUNT(distinct(tr.idfile)) as fileC')
            ->groupBy('file.idappli')
            ->getQuery()
            ->getResult()

            ;

    }

    public function findArticlesByOpeByDateNonProd($files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps ', 'cmd')
            ->where('ligne.idfile IN (:id)')
            ->setParameter('id', $files)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('count(cmd.quantite) as quantite')
            ->addSelect('cmd.libelle')
            ->addSelect('cmd.flagart')
            ->groupBy('cmd.libelle')
            ->getQuery()
            ->getArrayResult()

            ;
    }

    public function findAllBlByCmd($cmd,$idClient, $idope)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('cmd.numcmde LIKE :cmd')
            ->orWhere('ligne.numbl LIKE :cmd3')
            ->orWhere('UPPER(tr.destinataire) LIKE UPPER(:cmd5)')
            ->setParameter('cmd', '%'.$cmd.'%')
            ->setParameter('cmd3', '%'.$cmd.'%')
            ->setParameter('cmd5', '%'.$cmd.'%' )
            ->andWhere('ligne.idclient = :client')
            ->setParameter('client', $idClient)
            ->andWhere('file.idappli = :ope')
            ->setParameter('ope', $idope)
            ->addSelect('tr.destinataire')
            ->addSelect('tr.destCp')
            ->addSelect('tr.typeTransport')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destRue')
            ->addSelect('tr.destAd2')
            ->addSelect('tr.destAd3')
            ->addSelect('tr.destAd4')
            ->addSelect('tr.destAd5')
            ->addSelect('tr.destAd6')
            ->addSelect('tr.expRef')
            ->addSelect('tr.refclient')
            ->addSelect('tr.destVille')
            ->addSelect('file.dateFile')
            ->addSelect('tr.dateCmde')
            ->addSelect('tr.instrLivrais1')
            ->addSelect('tr.instrLivrais2')
            ->addSelect('tr.destPays')
            ->addSelect('file.nbpages')
            ->addSelect('file.filename')
            ->addSelect('ligne.poids as poidsReel')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('cmd.numTrack')

//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function donneCmdCoriolisWithNumRef($numRef, $idApp)
    {

        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApp)
            ->andWhere('tr.idclient = (:idClient)')
            ->setParameter('idClient', 679)
            ->andwhere('cmd.numRef = (:nRef)')
            ->setParameter('nRef', $numRef)
            ->select('cmd.numcmde')
            ->getQuery()
            ->getResult()

            ;

    }

    public function donneAllArticleByCmd($numCmd)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->where('cmd.numcmde IN (:numCmd)')
            ->setParameter('numCmd', $numCmd)
            ->andWhere('cmd.idclient = (:idClient)')
            ->setParameter('idClient', 679)
            ->select('cmd.numero')
            ->addSelect('bl.dateProduction')
            ->addSelect('tr.refclient')
            ->addSelect('ligne.numbl')
            ->addSelect('tr.destCp')
            ->addSelect('tr.destVille')
            ->addSelect('tr.destRue')
            ->addSelect('cmd.numcmde')
            ->addSelect('cmd.numRef')
            ->addSelect('cmd.flagProd')
            ->addSelect('cmd.numTrack')
            ->addSelect('cmd.type')
            ->addSelect('tr.destinataire')
            ->addSelect('cmd.record')
            ->getQuery()
            ->getArrayResult()

            ;

    }

    public function donneCmdCoriolis($idApplication)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApplication)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('cmd.numRef')
            ->addSelect('count(distinct(cmd.numbl)) as nbBl')
            ->addSelect('cmd.flagProd')
            ->getQuery()
            ->getArrayResult()

            ;

    }
    public function donneBlCoriolis($idApplication)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('tr.idfile', 'file')
            ->where('file.idappli = (:idApp)')
            ->setParameter('idApp', $idApplication)
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('cmd.numRef')
//            ->addSelect('count(distinct(cmd.numbl)) as nbBl')
            ->addSelect('cmd.flagProd')
            ->getQuery()
            ->getArrayResult()

            ;

    }
    public function findArticlesPersoByFileArrayNonProd($files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->where('ligne.idfile IN (:id)')
            ->setParameter('id', $files)
            ->andWhere('cmd.flagart = 0')
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->select('ligne.idfile')
            ->select('ligne.idfile')
            ->addSelect('cmd.libelle')
            ->addSelect('ligne.numbl')
            ->addSelect('count(cmd.perso1)')
            ->addSelect('cmd.flagart')
            ->addSelect('cmd.perso1')
            ->addSelect('cmd.perso2')
            ->orderBy('cmd.perso1', 'ASC')
            ->groupBy('cmd.perso1')
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function findArticlesByFileArrayNonProd($files)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->where('ligne.idfile IN (:id)')
            ->andwhere('bl.dateProduction = :dat')
            ->setParameter('dat', '0000-00-00 00:00:00')
            ->setParameter('id', $files)
            ->select('ligne.idfile')
            ->addSelect('sum(cmd.quantite) as quantite')
            ->addSelect('cmd.libelle')
            ->addSelect('cmd.flagart')
            ->groupBy('ligne.idfile, cmd.libelle')
            ->getQuery()
            ->getArrayResult()
            ;
    }

//    public function donneDateProductionByBl($numBL)
//    {
//
//        return $this
//            ->createQueryBuilder('bl')
//            ->innerJoin('bl.bl', 'ligne')
//            ->innerJoin('ligne.numligne', 'tr')
//            ->where('bl.bl = (:bld)')
//            ->setParameter('bld', $numBL)
//            ->select('ligne.numbl')
//            ->addSelect('bl.poids')
//            ->addSelect('bl.dateProduction')
//            ->addSelect('tr.dateDepot')
//            ->getQuery()
//            ->getResult()
//
//            ;
//
//    }

    public function syntheseMoisArtCokeFlagZero($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->innerJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
//            ->andWhere('cmd.flagart = (:id)')
//            ->setParameter('id', 0)
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
//            ->andWhere('cmd.libelle NOT LIKE :rec')
//            ->setParameter('rec', '%cla%' )
//            ->andWhere('cmd.libelle NOT LIKE :rec1')
//            ->setParameter('rec1', '%offret Plan de Pari%' )
//            ->andWhere('cmd.libelle NOT LIKE :rec2')
//            ->setParameter('rec2', '%offret Caroussel Pari%' )
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->addSelect('cmd.flagart')
            ->addSelect('cmd.libelle')
            ->groupBy('ligne.numbl, cmd.libelle')
            ->orderBy('cmd.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function syntheseMoisArtCokePSG($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('UPPER(cmd.codearticle) LIKE  :ps')
            ->setParameter('ps', '%PSG%')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }
    public function syntheseMoisArtCokeCollector($date)
    {
        return $this
            ->createQueryBuilder('bl')
            ->leftJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->innerJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->where('bl.dateProduction  LIKE :date')
            ->setParameter('date', '%'.$date.'%')
            ->andWhere('UPPER(cmd.codearticle) LIKE  :cd')
            ->setParameter('cd', '0071')
            ->andWhere('file.idappli = (:idA)')
            ->setParameter('idA', 416)
            ->select('ligne.numbl')
            ->addSelect('sum(cmd.quantite)')
            ->groupBy('ligne.numbl')
            ->getQuery()
            ->getArrayResult()
            ;
    }



    public function donneNbAllBlnonProd()
    {
        $dateM6 = date("Y-m-d", strtotime('-70 day'));
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cl')
            ->where('file.dateFile > (:dat)')
            ->setParameter('dat', $dateM6)
//            ->where('bl.idbl > :idB')
//            ->setParameter('idB', $idBL)
            ->andWhere('bl.dateProduction LIKE :date')
            ->setParameter('date', '%0000%')
            ->select('cl.nomclient')
            ->addSelect('app.appliname')
            ->addSelect('cl.idclient')
            ->addSelect('count(ligne.numbl)')
            ->addSelect('app.idappli')
//            ->andWhere('cmd.flagart = (:qt)')
//            ->setParameter('qt', 0)
//            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('app.appliname')
            ->orderBy('tr.dateInsert', 'DESC')
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function donneNbAllArticlenonProd()
    {
        $dateM6 = date("Y-m-d", strtotime('-70 day'));
        return $this
            ->createQueryBuilder('bl')
            ->innerJoin('bl.bl', 'ligne')
            ->leftJoin('ligne.numligne', 'tr')
            ->innerJoin('tr.idfile', 'file')
            ->innerJoin('file.idappli', 'app')
            ->innerJoin('app.idclient', 'cl')
            ->leftJoin('ligne.ecommCmdeps', 'cmd')
            ->where('file.dateFile > (:dat)')
            ->setParameter('dat', $dateM6)
            ->andWhere('bl.dateProduction LIKE :date')
            ->setParameter('date', '%0000-00-00%')
            ->select('app.idappli')
            ->addSelect('count(ligne.numbl)')
            ->andWhere('cmd.flagart = (:qt)')
            ->setParameter('qt', 0)
//            ->orderBy('tr.dateInsert', 'DESC')
            ->groupBy('app.appliname')
            ->getQuery()
            ->getArrayResult()
            ;
    }

}
